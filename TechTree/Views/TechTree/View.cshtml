@model GameModels.TechTree

@{
    ViewBag.Title = "View Tech Tree";
}

@Styles.Render("~/Content/Tree.css")

@section scripts {
    @Scripts.Render("~/Scripts/Tree.js")
}

<h2>A randomly generated tech tree</h2>

<h5>Seed: @Model.Seed</h5>

<techtree>
    @foreach (var b in Model.Buildings)
    {
        <building symbol="@b.Symbol" row="@b.DisplayRow" column="@b.DisplayColumn" requires="@(b.Prerequisite == null ? null : b.Prerequisite.Symbol)">
            <info>
                <name>@b.Name</name>
                <cost>
                    @if (b.MineralCost != 0)
                    {
                        <minerals>@b.MineralCost</minerals>
                    }
                    @if (b.VespineCost!= 0)
                    {
                        <vespine>@b.VespineCost</vespine>
                    }
                    @if (b.SupplyCost != 0)
                    {
                        <supply class="@(b.SupplyCost < 0 ? "positive" : null)">@Math.Abs(b.SupplyCost)</supply>
                    }
                    <time>@b.BuildTime</time>
                </cost>
                <stats>
                    <health>@b.Health</health>
                    <armor>@b.Armor</armor>
                    @if (b.Mana != 0)
                    {
                        <mana>@b.Mana</mana>
                    }
                    @if (b.ActionPoints != 0)
                    {
                        <actionpoints>@b.ActionPoints</actionpoints>
                    }
                    <vision>@b.VisionRange</vision>
                </stats>
                @if (b.IsDetector)
                {
                    <detector></detector>
                }
                @if (b.UpgradesFrom != null)
                {
                    <upgradesFrom>@b.UpgradesFrom.Name</upgradesFrom>
                }
                @if (@b.Prerequisite != null)
                {
                    <requires>@b.Prerequisite.Name</requires>
                }
                @foreach (var f in b.Features)
                {
                    @Html.Partial("_FeaturePartial", f);
                }
            </info>

            <unlocks>
                @foreach (GameModels.Definitions.UnitType u in b.Unlocks.Where(x => x is GameModels.Definitions.UnitType))
                {
                    <unit symbol="@u.Symbol">
                        <info>
                            <name>@u.Name</name>
                            <cost>
                                @if (u.MineralCost != 0)
                                {
                                    <minerals>@u.MineralCost</minerals>
                                }
                                @if (u.VespineCost != 0)
                                {
                                    <vespine>@u.VespineCost</vespine>
                                }
                                @if (u.SupplyCost != 0)
                                {
                                    <supply class="@(u.SupplyCost < 0 ? "positive" : null)">@Math.Abs(u.SupplyCost)</supply>
                                }
                                <time>@u.BuildTime</time>
                            </cost>
                            <stats>
                                <health>@u.Health</health>
                                <armor>@u.Armor</armor>
                                @if (u.Mana != 0)
                                {
                                    <mana>@u.Mana</mana>
                                }
                                @if (u.ActionPoints != 0)
                                {
                                    <actionpoints>@u.ActionPoints</actionpoints>
                                }
                                <vision>@u.VisionRange</vision>
                            </stats>
                            @if (u.IsDetector)
                            {
                                <detector></detector>
                            }
                            <builtat>@u.BuiltBy.Name</builtat>
                            @if (@u.Prerequisite != u.BuiltBy)
                            {
                                <requires>@u.Prerequisite.Name</requires>
                            }
                            @foreach (GameModels.Definitions.Feature f in u.Features)
                            {
                                @Html.Partial("_FeaturePartial", f);
                            }
                        </info>
                    </unit>
                }
            </unlocks>
        </building>
    }
</techtree>